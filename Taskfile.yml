# https://taskfile.dev

version: '3'

dotenv: [".clean.env"]

vars:
  CWD:
    sh: git rev-parse --show-toplevel
  APP:
    sh: basename {{.CWD}}
  MOD:
    sh: go mod edit -json | jq -r .Module.Path
  DIST:
    "{{.CWD}}/dist"
  COMMIT:
    sh: git rev-parse --short HEAD
  
  binaries: |
    actions

tasks:
  default:
    cmds:
      - task: build

  dist:
    desc: Create dist directory
    cmds:
      - mkdir -p {{.DIST}}

  test:
    desc: Run unit tests
    deps: [dist]
    cmds:
      - go test -timeout 20s -race -count=1 -covermode atomic -coverprofile {{.DIST}}/coverage.txt ./...

  test:fuzz:
    desc: Run fuzz tests
    cmds:
      - go test -fuzz=Fuzz{{.CLI_ARGS}} -fuzztime 10s

  test:cover:
    desc: Visualize test coverage
    deps: [test]
    cmds:
      - go tool cover -html={{.DIST}}/coverage.txt

  clean:
    desc: Remove build artifacts
    cmds:
      - rm -rf {{.DIST}}

  build:
    desc: Build all binaries
    deps: [dist]
    cmds:
      - |

        {{ range ( .binaries | trim | splitLines ) -}}
        go build -o {{$.DIST}}/{{.}} cmd/{{.}}/*.go
        {{ end -}}

  build:generate:
    desc: Generate and build all commands
    cmds:
      - go generate
      - task: build

  lint:
    desc: Runs golint
    cmds:
      - golangci-lint -v run
      - typos

  snapshot:
    desc: Build a snapshot
    deps: [test, lint]
    cmds:
      - goreleaser --debug release --snapshot --clean

  scc:
    desc: Run scc (https://github.com/boyter/scc)
    cmds:
      - scc -i go {{.CWD}}

  goimports:
    desc: Run goimports
    cmds:
      - goimports -w -local "{{.MOD}}" .
